name: mlflow application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export MLFLOW_TRACKING_URI=${{ secrets.VPS_HOST }}:5000
          export MLFLOW_S3_ENDPOINT_URL=${{ secrets.MLFLOW_S3_ENDPOINT_URL }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          sudo apt update && sudo apt upgrade -y
          sudo apt-get install -y docker.io docker-compose
          sudo systemctl restart docker.service
          if [ ! -d "app" ]; then
            mkdir app
            cd app
            git clone https://github.com/redhox/mlflow_deploiment.git .
          else
            cd app
            git pull origin main
          fi


          sudo docker network inspect mlflow_network &> /dev/null
          if [ $? -eq 0 ]; then
            echo "Le réseau Docker mlflow_network existe déjà."
          else
            sudo docker network create mlflow_network
          fi
          sudo docker run --rm -d \
              --network mlflow_network \
              -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
              -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
              -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              -e MYSQL_ROOT_PASSWORD=bonjour \
              -v dbdata:/var/lib/mysql \
              --name db \
              mysql:5.7
          sudo docker build -t mlflow_server -f ./Dockerfile .
          sudo docker run --rm -d \
            --network mlflow_network \
            -p 5000:5000 \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e MLFLOW_S3_ENDPOINT_URL=${{ secrets.MLFLOW_S3_ENDPOINT_URL }} \
            -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
            -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            -e MLFLOW_TRACKING_USERNAME=user1 \
            -e MLFLOW_TRACKING_PASSWORD=password1 \
            --name mlflow \
            mlflow_server mlflow server --app-name basic-auth --host 0.0.0.0 --backend-store-uri mysql+pymysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@db/${{ secrets.MYSQL_DATABASE }} --default-artifact-root s3://mlflow-artifacts
  
