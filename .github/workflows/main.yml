name: mlflow application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |

          if [ ! -d "mlflow" ]; then
            mkdir mlflow
            cd mlflow
            git clone https://github.com/redhox/mlflow_deploiment.git .
          else
            cd mlflow
            docker stop mlflow
            git pull origin main
          fi
          docker build -t mlflow_server -f ./Dockerfile .
          docker run --rm -d \
            -p 5000:5000 \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e MLFLOW_S3_ENDPOINT_URL=${{ secrets.MLFLOW_S3_ENDPOINT_URL }} \
            --name mlflow \
            mlflow_server mlflow server --app-name basic-auth --host 0.0.0.0:5000 --backend-store-uri   postgresql://postgres.root:${{ secrets.POSTGRES_PASSWORD }}@91.165.239.121:5432/postgres --default-artifact-root s3://mlflow-artifacts
