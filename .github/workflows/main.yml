name: mlflow application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export MLFLOW_TRACKING_URI=${{ secrets.VPS_HOST }}:5000
          export MLFLOW_S3_ENDPOINT_URL=${{ secrets.MLFLOW_S3_ENDPOINT_URL }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          sudo apt update && sudo apt upgrade -y
          sudo apt-get install -y docker.io docker-compose
          sudo systemctl restart docker.service
          if [ ! -d "app" ]; then
            mkdir app
            cd app
            git clone https://github.com/redhox/mlflow_deploiment.git .
            # sudo docker-compose up -d
            sudo docker-compose up -d \
              -e MYSQL_USER=${MYSQL_USER} \
              -e MYSQL_DATABASE=${MYSQL_DATABASE} \
              -e MYSQL_PASSWORD=${MYSQL_PASSWORD} \
              -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
              -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
              -e MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
          else
            cd app
            sudo docker-compose down
            git pull origin main
            sudo docker-compose up -d --build
              -e MYSQL_USER=${MYSQL_USER} \
              -e MYSQL_DATABASE=${MYSQL_DATABASE} \
              -e MYSQL_PASSWORD=${MYSQL_PASSWORD} \
              -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
              -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
              -e MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
          fi 
